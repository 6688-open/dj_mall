<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
	namespace:用于隔离SQL全局唯一（采用接口和XML开发时为接口的全路径）
 -->
<mapper namespace="com.dj.mall.mapper.basedata.log.LogMapper">
	
	 
		<!-- 提取公共部分  sql 代码块 -->
		<!-- <sql id="UserColumn">
		  id, user_name, password, user_type, manager_id
		</sql>-->

	<!-- 
			sql语句的*  提取公共部分
	    	 用<include refid="UserColumn"/> 代替
	 -->

	<!--findLogAndFreightAll  展示 -->
	<select id="findLogAndFreightAll" resultType="com.dj.mall.domain.basedata.log.entiy.Log">
		SELECT
			ft.id AS id,
			dy.dictionary_name AS dicCode,
			ft.freight AS freightShow
		FROM
			freight ft
		LEFT JOIN dictionary dy ON dy.id = ft.log_id
	</select>

	<insert id="insertFreight">
		INSERT into freight (log_id, freight) VALUES (#{logId},#{freight})
	</insert>

	<select id="toUpdateFreightById" resultType="com.dj.mall.domain.basedata.log.entiy.Freight">
		SELECT * FROM freight where id =#{id}
	</select>

	<update id="updateFreightById">
		UPDATE freight set freight = #{freight} where id = #{id}
	</update>

	<select id="findLogIdAndFreightToUniq" resultType="com.dj.mall.domain.basedata.log.entiy.Log">
			SELECT
				ft.id AS id ,
				dy.dictionary_name AS dicCode,
					ft.freight AS freightShow
			FROM
				dictionary dy
			LEFT JOIN freight ft ON dy.id = ft.log_id
			WHERE
				dy.parent_code = 'LOG' and  	dy.dictionary_name = #{dicCode} and ft.freight = #{freightShow}
	</select>

	<!--findDicById 查询名称物流-->
	<select id="findDicById" resultType="com.dj.mall.domain.basedata.dictionary.entiy.Dictionary">
			SELECT
				id,
				CODE,
				dictionary_name,
				parent_code
			FROM
				dictionary
			WHERE
				id = #{id}
	</select>
	
	
</mapper>